{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["card","_ref","name","email","id","React","createElement","className","src","concat","alt","CardList","robots","map","user","i","Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_inherits","_createClass","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oMAeeA,EAbF,SAAHC,GAA0B,IAArBC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAEH,EAAFG,GAExB,OACIC,IAAAC,cAAA,OAAKC,UAAU,uDACXF,IAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BL,EAAE,YAAYM,IAAI,WACpDL,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCaLQ,EAnBE,SAAHV,GAAiB,IAAZW,EAAMX,EAANW,OACf,OACIP,IAAAC,cAAA,WAEQM,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIV,IAAAC,cAACU,EAAI,CACDC,IAAKF,EACLX,GAAIQ,EAAOG,GAAGX,GACdF,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,YCE9Be,EAbG,SAAHjB,GAAiBA,EAAXkB,YAAgC,IAAnBC,EAAYnB,EAAZmB,aAC9B,OACIf,IAAAC,cAAA,OAAKC,UAAU,OACPF,IAAAC,cAAA,SACIC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCfI,EARA,SAACC,GACZ,OACIpB,IAAAC,cAAA,OAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WC0CJC,EAzCN,SAAAC,GACP,SAAAD,IAAc,IAAAE,EAKX,OALWC,YAAAC,KAAAJ,IACZE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,QAkBFI,eAAiB,SAACC,GAChBP,EAAKQ,SAAS,CAACtB,YAAaqB,EAAME,OAAOC,SAlBzCV,EAAKW,MAAQ,CACXhC,OAAQ,GACRO,YAAa,IACdc,EAgCF,OAtCMY,YAAAd,EAAAC,GAONc,YAAAf,EAAA,EAAAd,IAAA,oBAAA0B,MAAA,WAEmB,IAAAI,EAAAZ,KAClBa,MAAM,8CACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKN,SAAS,CAAC7B,OAAQwC,QAKzC,CAAAnC,IAAA,SAAA0B,MAAA,WAOQ,IAAAU,EAAAlB,KACDmB,EAAiBnB,KAAKS,MAAMhC,OAAO2C,OAAQ,SAAAC,GAC/C,OAAOA,EAAMtD,KAAKuD,cAAcC,SAASL,EAAKT,MAAMzB,YAAYsC,iBAElE,OACEpD,IAAAC,cAAA,OAAKC,UAAU,MACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAACY,EAAS,CAACE,aAAce,KAAKI,iBAC9BlC,IAAAC,cAACkB,EAAM,KACHnB,IAAAC,cAACK,EAAQ,CAACC,OAAQ0C,UAK3BvB,EAtCM,CAAS4B,mBCGLC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3D,IAAAC,cAACD,IAAM4D,WAAU,KACf5D,IAAAC,cAAA,WACED,IAAAC,cAACyB,EAAG","file":"static/js/main.78e8c42d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst card = ({name, email, id}) => {\r\n    // const {name, email, id} = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"Robots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div> \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default card;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ( {searchfield, searchChange} ) => {\r\n    return ( \r\n        <div className='pa2'>\r\n                <input \r\n                    className='pa3 ba b--green bg-lightest-blue'\r\n                    type='search' \r\n                    placeholder='Search Robots'\r\n                    onChange={searchChange}\r\n                />\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({robots: users}));\n    \n    //console.log(robots);    \n    // this.setState({robots: robots});\n    //console.log(\"componentDidMount\");\n  }\n\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value});\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter( robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n  });\n    return (\n      <div className=\"tc\"> \n        <h1>Robo Friends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>\n        <Scroll>\n            <CardList robots={filteredRobots} />\n        </Scroll>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\n\n//import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}